<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-07-25T15:24:45Z" name="Suite" finished-at="2019-07-25T15:26:04Z" duration-ms="79222">
    <groups>
    </groups>
    <test started-at="2019-07-25T15:24:45Z" name="Test" finished-at="2019-07-25T15:26:04Z" duration-ms="79222">
      <class name="testNg1.ListenerConcept">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testNg1.ListenerConcept@38364841]" started-at="2019-07-25T15:24:45Z" name="beforeMethod" finished-at="2019-07-25T15:25:08Z" duration-ms="22888" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1()[pri:0, instance:testNg1.ListenerConcept@38364841]" started-at="2019-07-25T15:25:08Z" name="test1" finished-at="2019-07-25T15:25:08Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testNg1.ListenerConcept@38364841]" started-at="2019-07-25T15:25:08Z" name="afterClass" finished-at="2019-07-25T15:25:08Z" duration-ms="841" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testNg1.ListenerConcept@38364841]" started-at="2019-07-25T15:25:08Z" name="beforeMethod" finished-at="2019-07-25T15:25:32Z" duration-ms="23747" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test2()[pri:0, instance:testNg1.ListenerConcept@38364841]" started-at="2019-07-25T15:25:32Z" name="test2" finished-at="2019-07-25T15:25:32Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testNg1.ListenerConcept@38364841]" started-at="2019-07-25T15:25:32Z" name="afterClass" finished-at="2019-07-25T15:25:33Z" duration-ms="842" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testNg1.ListenerConcept@38364841]" started-at="2019-07-25T15:25:33Z" name="beforeMethod" finished-at="2019-07-25T15:26:03Z" duration-ms="29945" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test3()[pri:0, instance:testNg1.ListenerConcept@38364841]" started-at="2019-07-25T15:26:03Z" name="test3" finished-at="2019-07-25T15:26:03Z" duration-ms="0" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[skipped test]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: skipped test
at testNg1.ListenerConcept.test3(ListenerConcept.java:30)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testNg1.ListenerConcept@38364841]" started-at="2019-07-25T15:26:03Z" name="afterClass" finished-at="2019-07-25T15:26:04Z" duration-ms="915" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testNg1.ListenerConcept -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
